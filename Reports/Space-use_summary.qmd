---
title: "Summary of FDN turtle space-use estimates"
author: Josh Cullen
date: "`r Sys.Date()`"
format: 
  pdf:
    toc: true
    number-sections: true
    number-depth: 2
    colorlinks: true
    fig-pos: 'H'
    fig-width: 6
    fig-dpi: 400
    fig-format: png
execute: 
  echo: false
  warning: false
  message: false
---

# Introduction

As part of a [workshop](https://joshcullen.github.io/Behavior_and_SpaceUse_Workshop) that demonstrated and compared how to estimate behavioral states and space-use from animal telemetry data, these results will also be used for publication. This is particularly important since the focal dataset is comprised of high-resolution tracks from adult male green turtles (*Chelonia mydas*) breeding at the island of Fernando de Noronha off the coast of Brazil.
<br><br>

This document serves to summarize the findings from the space-use portion of the workshop. The analyzed tracks shown here have been processed by a continuous-time correlated random walk (CTCRW) state-space model (SSM), which accounts for the Argos location error, while also acknowledging the minimal error (~100 m) associated with observations transmitted via Fastloc GPS.
<br><br>

In addition to the ecological inferences to be made from this analysis, another objective of this study is to demonstrate how these inferences may be biased as a result of method selection. The methods used in this comparison are common within the field of marine spatial ecology, and include some methods better suited to handling this type of high-resolution telemetry data that contains high autocorrelation, as well as legacy methods that shoulld not be used with this type of dataset. In particular, the methods used included minimum convex polygons (MCPs), kernel density estimation (KDE) using the reference ($h_{ref}$) and plug-in ($h_{plug-in}$) methods for estimating the smoothing bandwidth parameter, as well as the dynamic Brownian bridge movement model (dBBMM).


# The Data

Before getting into the analyses, I'll first provide an overview of what this dataset looks like following it being processed by the SSM. This particular dataset was estimated at an 8 hr regular time step to detect coarse-scale movement patterns related to migration or residency. **However, predictions from the SSM were also made at 1 and 4 hr time steps, as well as the original irregular time interval. These tracks estimated at the other time steps may be worth also analyzing further to demonstrate how inferences in behavioral states and space-use can be impacted by the time step being used.**

```{r}
#| label: load_data
library(tidyverse)
library(lubridate)
library(sf)  #v1.0.7
library(rnaturalearth)
library(MetBrewer)
library(units)


#### Load the model results from each method ####

load("../Processed_data/MCP_fits.RData")
load("../Processed_data/KDE_fits.RData")
load("../Processed_data/dBBMM_fits.RData")

dat <- read.csv('../Processed_data/SSM_CRW8hr_FDN Cmydas tracks.csv')

brazil<- ne_countries(scale = 10, country = "Brazil", returnclass = 'sf') %>%
  st_transform(crs = "+proj=merc +lon_0=0 +datum=WGS84 +units=km +no_defs") %>%
  dplyr::select(-level)
```

 
```{r}
#| label: viz_tracks
#| fig-cap: Tracks from all 20 adult male green turtles (*Chelonia mydas*) are shown in this map, where tracks have been processed by a state-space model and observations are estimated at an 8 hour time step.

ggplot() +
    geom_sf(data = brazil) +
    geom_path(data = dat, aes(x, y, color = factor(id), group = id), alpha = 0.5, size = 0.3) +
    scale_color_viridis_d(guide = "none") +
    annotate(geom = "text", label = "italic(Brazil)", x = -4350, y = -650, size = 10,
           parse = TRUE) +
    labs(x = 'Longitude', y = 'Latitude') +
    theme_bw() +
    theme(panel.grid = element_blank()) +
    coord_sf(xlim = c(min(dat$x) - 50, max(dat$x) + 50),
           ylim = c(min(dat$y) - 50, max(dat$y) + 50))
```


# The Methods

## Minimum convex polygons (MCP)

Minimum convex polygons (MCPs) are arguably the simplest and most biased of all recent methods for estimating animal space-use. This is because this method traditionally created a convex hull around the outermost points in a dataset to denote the area used by an animal, which is highly sensitive to sample size and extreme outliers. More recent implementations of MCPs allow pracitioners to specify a given percentage of the points captured by the MCP, which mitigates some of these problems. However, it assumes that the importance or intensity of space-use is uniform across the entire area. As an example, MCPs have been created for the entire sampled sub-population of adult male green turtles tagged at Fernando de Noronha, as well as on an individual basis.

```{r}
#| label: MCP_plot
#| fig-cap: 
#|   - "Population-level MCPs generated for 50%, 95%, and 100% of the data. Since MCPs do not focus on spatial intensity, the 50% region (often referred to as the core-use area for utilization distributions) isn't very helpful in identifying high-use regions."
#|   - "Individual-level MCPs generated for 95% of the data. Depending on the movement path of the individual, some MCPs include a large area of unused space, including land. However, estimates of space-use for individuals that remained resident to Fernando de Noronha are much better by comparison."

# pop-level
ggplot() +
  geom_sf(data = brazil) +
  geom_point(data = dat, aes(x, y), alpha = 0.25, size = 1) +
  geom_sf(data = dat.mcp$mcp, aes(color = factor(level)), fill = 'transparent', size = 0.75) +
  scale_color_manual('Level', values = c(met.brewer('Egypt', 2), 'black')) +
  labs(x = 'Longitude', y = 'Latitude') +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  coord_sf(xlim = c(min(dat$x) - 50, max(dat$x) + 50),
           ylim = c(min(dat$y) - 50, max(dat$y) + 50))

# id-level
ggplot() +
    geom_sf(data = brazil) +
    geom_point(data = dat, aes(x, y, color = factor(id)), alpha = 0.25, size = 1) +
    geom_sf(data = dat.id.mcp, aes(color = id), fill = 'transparent', size = 0.75) +
    scale_color_viridis_d(guide = "none") +
    labs(x = 'Longitude', y = 'Latitude') +
    theme_bw() +
    theme(panel.grid = element_blank()) +
    coord_sf(xlim = c(min(dat$x) - 50, max(dat$x) + 50),
           ylim = c(min(dat$y) - 50, max(dat$y) + 50))
```



## Kernel density estimation (KDE)

Unlike MCPs, KDE **does** calculate the spatial intensity of the relocations from the animal telemetry dataset and hence is considered one of a number of methods used to estimate the utilization distribution (UD), specifically the occurrence distribution. However, the smoothing of this intensity surface can provide marked differences in results for a selected intensity isopleth of interest.
<br><br>

Large values of the smoothing bandwidth parameter ($h$) produce large amounts of smoothing that ultimately result in very large areas the animal could have used, whereas small values of $h$ produce estimates that closely surround the points and may not provide any additional insight beyond the points themselves. Therefore, the method used to estimate $h$ is of the utmost importance when using KDE to estimate an animal's UD. Two methods used in this analysis include the reference method ($h_{ref}$) and the plug-in method ($h_{plug-in}$). In general, relatively large values are typically estimated by $h_{ref}$ whereas relatively smaller values are estimated by $h_{plug-in}$. Comparisons between the two methods can be seen below in Figs 4 and 5 at the population level, while Figs 6 and 7 show estimates at the individual level.
<br><br>

```{r}
#| label: KDE-pop
#| layout-nrow: 2
#| fig-cap: 
#|   - "Population-level estimates of space-use via KDE using the *reference* method to estimate the smoothing bandwidth. Shown are the 50 and 95% contours that characterize the tracked green turtles."
#|   - "Population-level estimates of space-use via KDE using the *plug-in* method to estimate the smoothing bandwidth. Shown are the 50 and 95% contours that characterize the tracked green turtles."

kde.href.contours <- st_transform(kde.href.contours, st_crs(brazil))
kde.hpi.contours <- st_transform(kde.hpi.contours, st_crs(brazil))

# href
ggplot() +
  geom_sf(data = brazil) +
  geom_path(data = dat, aes(x, y, group = id), alpha = 0.25, size = 0.3) +
  geom_sf(data = kde.href.contours, aes(color = factor(level)), fill = 'transparent', size = 0.75) +
  scale_color_met_d('Egypt') +
  labs(x = 'Longitude', y = 'Latitude') +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  coord_sf(xlim = c(min(dat$x) - 50, max(dat$x) + 50),
           ylim = c(min(dat$y) - 50, max(dat$y) + 50))

# plug-in
ggplot() +
  geom_sf(data = brazil) +
  geom_path(data = dat, aes(x, y, group = id), alpha = 0.25, size = 0.3) +
  geom_sf(data = kde.hpi.contours, aes(color = factor(level)), fill = 'transparent', size = 0.75) +
  scale_color_met_d('Egypt') +
  labs(x = 'Longitude', y = 'Latitude') +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  coord_sf(xlim = c(min(dat$x) - 50, max(dat$x) + 50),
           ylim = c(min(dat$y) - 50, max(dat$y) + 50))
```


```{r}
#| label: KDE-ind
#| layout-nrow: 2
#| fig-cap: 
#|   - "Individual-level estimates of space-use via KDE using the *reference* method to estimate the smoothing bandwidth. Shown are the 50 and 95% contours that characterize the tracked green turtles."
#|   - "Individual-level estimates of space-use via KDE using the *plug-in* method to estimate the smoothing bandwidth. Shown are the 50 and 95% contours that characterize the tracked green turtles."

dat.id.kde.href <- st_transform(dat.id.kde.href, st_crs(brazil))
dat.id.kde.hpi <- st_transform(dat.id.kde.hpi, st_crs(brazil))

# href
ggplot() +
  geom_sf(data = brazil) +
  geom_path(data = dat, aes(x, y, group = id), alpha = 0.25, size = 0.3) +
  geom_sf(data = dat.id.kde.href, aes(color = factor(level)), fill = 'transparent', size = 0.75) +
  scale_color_met_d('Egypt') +
  labs(x = 'Longitude', y = 'Latitude') +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  coord_sf(xlim = c(min(dat$x) - 50, max(dat$x) + 50),
           ylim = c(min(dat$y) - 50, max(dat$y) + 50)) +
  facet_wrap(~ id)

# plug-in
ggplot() +
  geom_sf(data = brazil) +
  geom_path(data = dat, aes(x, y, group = id), alpha = 0.25, size = 0.3) +
  geom_sf(data = dat.id.kde.hpi, aes(color = factor(level)), fill = 'transparent', size = 0.75) +
  scale_color_met_d('Egypt') +
  labs(x = 'Longitude', y = 'Latitude') +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  coord_sf(xlim = c(min(dat$x) - 50, max(dat$x) + 50),
           ylim = c(min(dat$y) - 50, max(dat$y) + 50)) +
  facet_wrap(~ id)
```


Although KDE can calculate the spatial intensity of point distributions (unlike MCP), there still remain some limitations to this method given the properties of the data. Namely, KDE treats all points as independent ands identically distributed (IID). Since this property is nearly always violated by modern telemetry devices as there is almost always a high level of autocorrelation between successive relocations, these estimates of space-use tend to be biased. While there are a few different options to account for this autocorrelation, one method of value is the dynamic Brownian bridge movement model.


## Dynamic Brownian bridge movement model (dBBMM)

Unlike both MCP and KDE, dBBMMs account for autocorrelation between successive relocations through the eponymous Brownian bridges, which estimate potential space-use between each pair of points that define successive steps along a trajectory. Additionally, this method can account for general shifts in behavior by allowing the Brownian motion variance (i.e., the width of the Brownian bridge region) to vary over time. This is expected to produce more reliable estimates of space-use, specifically the occurrence distribution, associated with movements from each tracked individual. Location error is also taken into account by this modeling approach, for which the estimated standard errors for the locations from the fitted state-space model are supplied.

```{r}
#| label: dBBMM-facet-level
#| fig-cap: 
#|   - "Utilization distributions (UDs) at the 50 and 95% isopleths are shown as calculated using the dBBMM method. All 20 individual UDs are shown separately."
#|   - "UDs are shown separately by ID to better discern space-use on an individual basis."

# facet by level
ggplot() +
  geom_sf(data = brazil) +
  geom_path(data = dat, aes(x, y, color = factor(id), group = id), size = 0.5, alpha = 0.5) +
  geom_sf(data = contours2, fill = "transparent", size = 0.75, color = 'black') +
  scale_color_viridis_d(option = 'turbo', guide = "none") +
  labs(x = 'Longitude', y = 'Latitude') +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  facet_wrap(~ UD.level, nrow = 2) +
  coord_sf(xlim = c(min(dat$x) - 50, max(dat$x) + 50),
           ylim = c(min(dat$y) - 50, max(dat$y) + 50))

# facet by ID
ggplot() +
  geom_sf(data = brazil) +
  geom_path(data = dat, aes(x, y, group = id), size = 0.5, alpha = 0.5) +
  geom_sf(data = contours2, aes(color = UD.level), fill = "transparent", size = 0.5) +
  scale_color_met_d('Egypt', guide = "none") +
  labs(x = 'Longitude', y = 'Latitude') +
  theme_bw() +
  theme(panel.grid = element_blank()) +
  facet_wrap(~ id) +
  coord_sf(xlim = c(min(dat$x) - 50, max(dat$x) + 50),
           ylim = c(min(dat$y) - 50, max(dat$y) + 50))
```


# Method Comparison

While a particular method for use in estimating space-use should ultimately be selected based on its ability to account for the properties of the dataset while also providing insightful inferences, it is still valuable to visualize the differences among the three methods used here. This is particularly important given that many researchers that study the spatial ecology of marine turtles continue to use methods such as KDE, although they may not necessarily be appropriate for their dataset. 
<br><br>

So statistical properties notwithstanding, I will display comparisons visually to explore the geographic locations that each method considers as the primary regions used by the tracked turtles, as well as the estimated area from each method. This is also broken down to make comparisons among migrants and residents separately to determine if there are differences in method performance based on the exhibited movement patterns of the animal. Figs 10-14 below show the 50 and 95% UDs per method and ID, whereas Figs 15-17 compare the estimated area covered by each UD across methods.

```{r}
#| label: wrangle-method-res

#### Wrangle model results to match up properly ####

# Transform project for MCP to match other output
mcp <- dat.id.mcp %>%
  st_transform(crs = st_crs(contours2)) %>%
  mutate(method = 'MCP') %>%
  dplyr::select(id, level, method, geometry)

# Rename other output
kde.href <- dat.id.kde.href %>%
  mutate(method = 'KDE_href') %>%
  dplyr::select(id, level, method, geometry)
kde.hpi <- dat.id.kde.hpi %>%
  mutate(method = 'KDE_hpi') %>%
  dplyr::select(id, level, method, geometry)
dbbmm <- contours2 %>%
  rename(level = UD.level) %>%
  mutate(method = 'dBBMM') %>%
  dplyr::select(id, level, method, geometry)


ud.all <- rbind(mcp, kde.href, kde.hpi, dbbmm)
```


```{r}
#| label: compare-contours-map
#| fig-height: 10
#| fig-width: 8
#| fig-cap: "Comparison of the 50 and 95% isoplethes for the estimated occurrence distribution by individual and method. MCPs are only shown for the 95% isopleth since 50% MCP isopleths often result in nonsensical patterns."

for (i in c(1,6,11,16)) {
  
  # Show all IDs, methods, and levels
ind <- unique(dat$id)[i:(i+4)]

print(
ggplot() +
  geom_sf(data = brazil) +
  geom_path(data = dat %>%
              filter(id %in% ind), aes(x, y, group = id), size = 0.5, alpha = 0.5) +
  geom_sf(data = ud.all %>%
            filter(id %in% ind), aes(color = method), fill = "transparent", size = 0.5) +
  scale_color_met_d('Egypt') +
  labs(x = 'Longitude', y = 'Latitude') +
  theme_bw() +
  theme(panel.grid = element_blank(),
        strip.text = element_text(size = 10, face = "bold")) +
  coord_sf(xlim = c(min(dat$x) - 50, max(dat$x) + 50),
           ylim = c(min(dat$y) - 50, max(dat$y) + 50)) +
  facet_grid(id ~ level)
)

}

```


Since it's impossible to see the UDs for the turtles resident to Fernando de Noronha, let's zoom in on those individuals specifically to visualize these method comparisons.

```{r}
#| label: compare-contours-residents
#| fig-height: 10
#| fig-width: 8
#| fig-cap: "Comparison of the 50 and 95% isoplethes for the estimated occurrence distribution by individual and method, particularly for resident individuals."

# Zoom in on resident IDs
residents <- c(205542, 205544, 226069, 226071, 226072)
ggplot() +
  geom_path(data = dat %>%
              filter(id %in% residents), aes(x, y, group = id), size = 0.5, alpha = 0.15) +
  geom_sf(data = ud.all %>%
            filter(id %in% residents), aes(color = method), fill = "transparent", size = 0.5) +
  scale_color_met_d('Egypt') +
  labs(x = 'Longitude', y = 'Latitude') +
  theme_bw() +
  theme(panel.grid = element_blank(),
        strip.text = element_text(size = 10, face = "bold")) +
  facet_grid(id ~ level)
#all methods relatively comparable here
```


Now that we've mapped the UDs in space, lets plot the comparisons of the areal coverage for these UDs.

```{r}
#| label: compare-area-plots
#| fig-cap: 
#|   - "Comparison among methods by isopleth estimated on an individual basis."
#|   - "Comparison among methods by movement strategy on an individual basis."
#|   - "Comparison among methods by isopleth only for resident individuals."

#### Compare estimated area of space-use ####

ud.all$area <- st_area(ud.all)
ud.all$strategy <- ifelse(ud.all$id %in% residents, 'Resident', 'Migratory')


# Compare by method and UD level
ggplot(ud.all, aes(factor(level), area, color = method)) +
  geom_boxplot(width = 0.5, outlier.shape = NA, position = position_dodge(0.55)) +
  geom_point(alpha = 0.7, position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.55)) +
  scale_color_met_d("Hokusai3") +
  theme_bw()


# Compare by movement strategy
ggplot(ud.all %>%
         filter(level == 0.95), aes(strategy, area, color = method)) +
  geom_boxplot(width = 0.5, outlier.shape = NA, position = position_dodge(0.55)) +
  geom_point(alpha = 0.7, position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.55)) +
  scale_color_met_d("Hokusai3") +
  theme_bw()

# Focus on Residents
ggplot(ud.all %>%
         filter(strategy == 'Resident'), aes(factor(level), area, color = method)) +
  geom_boxplot(width = 0.5, outlier.shape = NA, position = position_dodge(0.55)) +
  geom_point(alpha = 0.7, position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.55)) +
  scale_color_met_d("Hokusai3") +
  theme_bw()
```


Based on these comparisons, it appears that MCP and KDE using $h_{ref}$ performed the worst of the methods compared. This was to be expected given that they either don't account for spatial intensity or are prone to overestimating space-use as a result of oversmoothing, respectively. Much of the space that falls within these estimated areas was not (*or could not*) actually be used by the tracked individuals.
<br><br>

By comparison, the UDs estimated by the KDE using $h_{plug-in}$ and dBBMM appeared to better estimate the occurrence distribution. And since the dBBMM was able to account for autocorrelation in the dataset while capturing potential behavioral shifts, this method is expected to produce more reliable estimates of space-use for this particular dataset. It also appears that this method tends to provide the smallest areal measures of space-use among the 4 methods shown here. This is particularly true for the migrant individuals (Fig. 16).
<br><br>

Surprisingly, the dBBMM produced the largest estimated UD areas on average across all methods when focusing specifically on the resident turtles (Fig. 17), even when comparing against MCP and KDE ($h_{ref}$). This is likely due to a larger value estimated for the Brownian motion variance parameter, which accounts for greater movement variability than expected by other methods.
<br><br>

For making ecological inferences using the dBBMM results, it appears that these adult male green turtles are using most of the area between Fernando de Noronha and the mainland of Brazil to migrate to their foraging grounds. Once reaching the mainland, these turtles still use shallow coastal waters as potential migratory corridors before finally finding a location to settle. Therefore, much of these coastal areas are likely important for connectivity between breeding and foraging areas. When considering the resident turtles, these individuals displayed high site fidelity with minimal if any forays from their initial tagging location during the breeding season. Therefore, the waters around Fernando de Noronha appear to remain important foraging habitat for a number of adult male green turtles (25% of this dataset) year-round.
